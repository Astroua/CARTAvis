{"attributes": {"isStatic": true, "group": "Polyfill", "name": "Function", "packageName": "qx.lang.normalize", "fullName": "qx.lang.normalize.Function", "type": "bootstrap"}, "type": "class", "children": [{"attributes": {"text": "<p>This class takes care of the normalization of the native &#8216;Function&#8217; object.\nTherefore it checks the availability of the following methods and appends\nit, if not available. This means you can use the methods during\ndevelopment in every browser. For usage samples, check out the attached links.</p>\n\n<p><strong>bind</strong>:\n<a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\"><span class=\"caps\">MDN</span> documentation</a> |\n<a href=\"http://es5.github.com/#x15.3.4.5\">Annotated ES5 Spec</a></p>\n\n<p>Example for the <code>bind</code> method:</p>\n\n<pre class=\"javascript\">\n// sample code, assumes the used variables are already defined\n\n// the listener method demonstrates how to pass dynamic values\n// to a method using 'bind'\nvar changeValueListener = function(value, event) {\n  // value is passed by the 'bind' method: its value is 'myArray[i]'\n  // second argument is passed by the 'on' method: its value is a event object\n  // 'this' is pointing to 'myComponent', since the first argument of 'bind' defines the context of the function call\n};\nvar myArray = [ 0, 2, 4, 6 ];\nfor (var i=0, j=myArray.length; i&lt;j; i++) {\n  myComponent.on(\"changeValue\", changeValueListener.bind(myComponent, myArray[i]));\n}\n</pre>"}, "type": "desc"}]}