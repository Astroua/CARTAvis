{"attributes": {"group": "Widget", "name": "Accordion", "packageName": "qx.ui.website", "superClass": "qx.ui.website.Tabs", "fullName": "qx.ui.website.Accordion", "type": "bootstrap"}, "type": "class", "children": [{"attributes": {"text": "<p><span class=\"caps\">EXPERIMENTAL</span> &#8211; <span class=\"caps\">NOT</span> <span class=\"caps\">READY</span> <span class=\"caps\">FOR</span> <span class=\"caps\">PRODUCTION</span></p>\n\n<p>The Accordion is a group of vertically stacked panels (here called pages),\neach with a header.\nBy default, only one page is visible while the others are collapsed.\nClicking a collapsed page&#8217;s header will expand it while collapsing the\npreviously expanded page. The expand and collapse operations can be\nvisually customized using <span class=\"caps\">CSS</span> animations.</p>\n\n<h2>Markup</h2>\nThe Accordion contains an unordered list element (<code>ul</code>), which\nwill be created if not already present.\nHeaders and pages are list items (<code>li</code>). Each header must contain\na button with an <code>accordionPage</code> data attribute where the value is a\nCSS selector string identifying the corresponding page. Headers and pages\nwill not be created automatically. They can be predefined in the DOM before\nthe <code>q().accordion()</code> factory method is called, or added programmatically.\n\n<h2>CSS Classes</h2>\n<table>\n  <thead>\n    <tr>\n      <td>Class Name</td>\n      <td>Applied to</td>\n      <td>Description</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>qx-accordion</code></td>\n      <td>Container element</td>\n      <td>Identifies the Accordion widget</td>\n    </tr>\n    <tr>\n      <td><code>qx-accordion-button</code></td>\n      <td>Page header (<code>li</code>)</td>\n      <td>Identifies and styles the page headers</td>\n    </tr>\n    <tr>\n      <td><code>qx-accordion-button-active</code></td>\n      <td>Page header (<code>li</code>)</td>\n      <td>Identifies and styles the header of the currently expanded page. Applied in addition to <code>qx-accordion-button</code></td>\n    </tr>\n    <tr>\n      <td><code>qx-accordion-page</code></td>\n      <td>Page (<code>li</code>)</td>\n      <td>Identifies and styles the pages</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 class=\"widget-markup\">Generated DOM Structure</h2>"}, "type": "desc"}, {"attributes": {}, "type": "constants", "children": [{"attributes": {"access": "protected", "name": "_templates"}, "type": "constant", "children": [{"attributes": {"text": "<p><strong>button</strong></p>\n\n<p>Template for the list items containing the panel buttons.</p>\n\n<p>Default value:</p>\n\n<pre><li><button>{{{content}}}</button></li></pre>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "_config"}, "type": "constant", "children": [{"attributes": {"text": "<p><strong>preselected</strong>\nThe index of the page that should be opened after initial\nrendering, or <code>null</code> if no page should be opened.</p>\n\n<p>Default value:</p>\n\n<pre>null</pre>\n\n<p><strong>animationTiming</strong></p>\n\n<p>Controls the page switching animation sequence:\n&#8220;sequential&#8221; means the animation to show the new page will\nonly start after the animation to hide the old page is\nfinished. &#8221;parallel&#8221; means the animations will be started\n(almost) simultaneously.</p>\n\n<p>Default value:</p>\n\n<pre>parallel</pre>\n\n<p><strong>animationStyles</strong></p>\n\n<p>Style properties used to animate page switching. Allowed values:\n&#8220;parallel&#8221;, &#8220;sequential&#8221;</p>\n\n<p>Default value:</p>\n\n<pre>[\"height\", \"paddingTop\", \"paddingBottom\"]</pre>\n\n<p><strong>hideAnimation</strong></p>\n\n<p>The animation used to hide the previous page when\na new one is selected</p>\n\n<p>Default value:</p>\n\n<pre>{\n  duration: 500,\n  delay: 0,\n  keep: 100,\n  timing: \"linear\",\n  keyFrames: {\n    0: {\n      height : \"{{height}}\",\n      paddingTop : \"{{paddingTop}}\",\n      paddingBottom : \"{{paddingBottom}}\"\n    },\n    100: {\n      height : \"0px\",\n      paddingTop: \"0px\",\n      paddingBottom: \"0px\"\n    }\n  }\n}</pre>\n\n<p><strong>showAnimation</strong></p>\n\n<p>The animation used to show a newly selected page.</p>\n\n<p>Default value:</p>\n\n<pre>{\n  duration: 500,\n  delay: 0,\n  keep: 100,\n  timing: \"linear\",\n  keyFrames: {\n    0: {\n      height : \"0px\",\n      paddingTop: \"0px\",\n      paddingBottom: \"0px\"\n    },\n    100 : {\n      height :  \"{{height}}\",\n      paddingTop : \"{{paddingTop}}\",\n      paddingBottom : \"{{paddingBottom}}\"\n    }\n  }\n}</pre>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 228, "isStatic": true, "name": "accordion"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "preselected"}, "type": "param", "children": [{"attributes": {"text": "<p>The (zero-based) index of the panel that should initially be opened</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Factory method which converts the current collection into a collection of\naccordion widgets.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>A new Accordion collection.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.ui.website.Accordion"}, "type": "entry"}]}]}, {"attributes": {"targetMethod": "", "targetClass": "qxWeb", "sourceMethod": "accordion", "sourceClass": "qx.ui.website.Accordion"}, "type": "attach"}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"docFrom": "qxWeb", "line": 241, "isCtor": true, "overriddenFrom": "qx.ui.website.Tabs", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "selector"}, "type": "param"}, {"attributes": {"name": "context"}, "type": "param"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "docFrom": "qx.ui.website.Tabs", "line": 377, "overriddenFrom": "qx.ui.website.Tabs", "name": "_onClick"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "line": 353, "overriddenFrom": "qx.ui.website.Tabs", "name": "_onKeyDown"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "e"}, "type": "param", "children": [{"attributes": {"text": "<p>keydown event</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Event"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Allows content selection using the up and down arrow keys</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "docFrom": "qx.ui.website.Tabs", "line": 321, "overriddenFrom": "qx.ui.website.Tabs", "name": "_showPage"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "newButton"}, "type": "param"}, {"attributes": {"name": "oldButton"}, "type": "param"}]}]}, {"attributes": {"access": "protected", "line": 291, "name": "_storeInitialStyles"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "page"}, "type": "param", "children": [{"attributes": {"text": "<p>Accordion page</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qxWeb"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Stores the page&#8217;s styles for the switching animations</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.ui.website.Widget", "line": 248, "overriddenFrom": "qx.ui.website.Tabs", "name": "init"}, "type": "method"}, {"attributes": {"docFrom": "qx.ui.website.Widget", "line": 265, "overriddenFrom": "qx.ui.website.Tabs", "name": "render"}, "type": "method"}]}]}